The database schema consists of 4 tables:
Company(ID_comp, name)
Trip(trip_no, id_comp, plane, town_from, town_to, time_out, time_in)
Passenger(ID_psg, name)
Pass_in_trip(trip_no, date, ID_psg, place)

The Company table contains IDs and names of the airlines transporting passengers.
The Trip table contains information on the schedule of flights:
trip (flight) number,
company (airline) ID,
plane type,
departure city,
destination city,
departure time, and arrival time.

The Passenger table holds IDs and names of the passengers.

The Pass_in_trip table contains data on flight bookings:
trip number,
departure date (day),
passenger ID
and her seat (place) designation during the flight.

It should be noted that
- scheduled flights are operated daily; the duration of any flight is less than 24 hours; town_from <> town_to;
- all time and date values are assumed to belong to the same time zone;
- departure and arrival times are specified with one minute precision;
- there can be several passengers bearing the same first name and surname (for example, Bruce Willis);
- the seat (place) designation consists of a number followed by a letter; the number stands for the row, while the letter (a â€“ d) defines the seat position in the grid (from left to right, in alphabetical order;
- connections and constraints are shown in the database schema below.



#63
Find the names of different passengers
that ever travelled more than once occupying seats with the same number.

select name from passenger
where id_psg in (
    select id_psg from pass_in_trip
    group by place, id_psg
    having count(place) > 1)


#67
Find out the number of routes with the greatest number of flights (trips).
Notes.
1) A - B and B - A are to be considered DIFFERENT routes.
2) Use the Trip table only.

with q as
(select count(*) as c from trip
group by town_from, town_to)

select count(*) from q
where c = (select max(c) from q)


#68
Find out the number of routes with the greatest number of flights (trips).
Notes.
1) A - B and B - A are to be considered the SAME route.
2) Use the Trip table only.

with q as (
select count(*) as c from trip
group by
 case
 when town_from > town_to
 then town_from else town_to
end,
 case
 when town_from < town_to
 then town_from else town_to
end)

select count(*) from q
where c = (select max(c) from q)
