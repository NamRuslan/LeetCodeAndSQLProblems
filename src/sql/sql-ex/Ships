The database of naval ships that took part in World War II is under consideration.
The database consists of the following relations:
Classes(class, type, country, numGuns, bore, displacement)
Ships(name, class, launched)
Battles(name, date)
Outcomes(ship, battle, result)

Ships in classes all have the same general design.
A class is normally assigned either the name of the first ship built according to the corresponding design,
or a name that is different from any ship name in the database. The ship whose name is assigned to a class
is called a lead ship.

The Classes relation includes the name of the class,
type (can be either bb for a battle ship, or bc for a battle cruiser), country the ship was built in,
the number of main guns, gun caliber (bore diameter in inches), and displacement (weight in tons).

The Ships relation holds information about the ship name, the name of its corresponding class,
and the year the ship was launched.

The Battles relation contains names and dates of battles the ships participated in,
and the Outcomes relation - the battle result for a given ship
(may be sunk, damaged, or OK, the last value meaning the ship survived the battle unharmed).

Notes:
1) The Outcomes relation may contain ships not present in the Ships relation.
2) A ship sunk can’t participate in later battles.
3) For historical reasons, lead ships are referred to as head ships in many exercises.
4) A ship found in the Outcomes table but not in the Ships table is still considered in the database.
This is true even if it is sunk.


#14
For the ships in the Ships table that have at least 10 guns, get the class, name, and country.

select c.class, s.name, c.country from classes c
inner join ships s on c.class = s.class
where numguns >= 10


#31
For ship classes with a gun caliber of 16 in. or more, display the class and the country.

select c.class, c.country from classes c
where bore >= 16


#33
Get the ships sunk in the North Atlantic battle.
Result set: ship.

select ship from outcomes
where battle = 'north atlantic' and result = 'sunk'


#34
In accordance with the Washington Naval Treaty concluded in the beginning of 1922,
it was prohibited to build battle ships with a displacement of more than 35 thousand tons.
Get the ships violating this treaty (only consider ships for which the year of launch is known).
List the names of the ships.

select name from classes, ships
where launched >= 1922 and type = 'bb' and displacement > 35000 and classes.class = ships.class


#36
List the names of lead ships in the database (including the Outcomes table).

select distinct s.name from ships s
join classes c
on s.name = c.class
union
select distinct o.ship from outcomes o
join classes c
on o.ship = c.class


#37
Find classes for which only one ship exists in the database (including the Outcomes table).

select all_class from (
    select class as all_class, name as all_name from ships
    union
    select c.class as all_class, o.ship as all_name from classes c
    join outcomes o
    on o.ship = c.class
    ) as t
group by all_class
having count(all_name) = 1


#38
Find countries that ever had classes of both battleships (‘bb’) and cruisers (‘bc’).

select distinct country from classes
where type = 'bb'
intersect
select distinct country from classes
where type = 'bc'


#39
Find the ships that `survived for future battles`; that is, after being damaged in a battle,
they participated in another one, which occurred later.

select distinct ship from outcomes as outcomes_damaged
join battles as battle_damaged
on name = battle
where result = 'damaged' and
exists
(select ship from outcomes
join battles
on name = battle
where battles.date > battle_damaged.date and ship = outcomes_damaged.ship)


#42
Find the names of ships sunk at battles, along with the names of the corresponding battles.

select ship, battle from outcomes
where result = 'sunk'


#44
Find all ship names beginning with the letter R.

select name from ships
where name like ('r%')
union
select ship from outcomes
where ship like ('r%')


#45
Find all ship names consisting of three or more words (e.g., King George V).
Consider the words in ship names to be separated by single spaces,
and the ship names to have no leading or trailing spaces.

select name from ships
where name like ('% % %')
union
select ship from outcomes
where ship like ('% % %')


#46
For each ship that participated in the Battle of Guadalcanal,
get its name, displacement, and the number of guns.

select name as n, displacement, numguns from ships
join classes
on ships.class = classes.class
where name in (select ship from outcomes where battle = 'Guadalcanal')
union
select ship as n, displacement, numguns from outcomes
join classes
on outcomes.ship = classes.class
where battle = 'Guadalcanal'
and ship not in (select name from ships)
union
select ship as n, null as displacement, null as numguns from outcomes
where battle = 'Guadalcanal'
and
ship not in (select name from ships)
and
ship not in (select class from classes)


#48
Find the ship classes having at least one ship sunk in battles.

select s.class from ships s
join outcomes o
on s.name = o.ship
where o.result = 'sunk'
union
select c.class from classes c
join outcomes o
on c.class = o.ship
where o.result = 'sunk'


#49
Find the names of the ships having a gun caliber of 16 inches (including ships in the Outcomes table).

select s.name from ships s
join classes c
on s.class = c.class
where c.bore = 16
union
select ship from outcomes
where ship in(
select class from classes
where bore = 16
)


#50
Find the battles in which Kongo-class ships from the Ships table were engaged.

select distinct o.battle from outcomes o
join ships s
on s.name = o.ship
where s.class = 'kongo'


#51
Find the names of the ships with the largest number of guns among all ships
having the same displacement (including ships in the Outcomes table).

select name from (
    select name, numguns, displacement from ships s
    join classes c
    on c.class = s.class
    union
    select ship as name, numguns, displacement from outcomes o
    join classes c
    on o.ship = c.class
    ) as names
join (
    select displacement, max(numguns) as numguns from (
        select displacement, numguns from ships s
        join classes c
        on s.class = c.class
        union
        select displacement, numguns from outcomes o
        join classes c
        on c.class = o.ship
        ) as raw_params
    group by displacement
    ) as params
on names.displacement = params.displacement and names.numguns = params.numguns


#52
Determine the names of all ships in the Ships table that can be a Japanese battleship
having at least nine main guns with a caliber of less than 19 inches
and a displacement of not more than 65 000 tons.

select name from ships s
join classes c
on s.class = c.class
where type = 'bb' and country = 'japan' and (numguns >= 9 or numguns is null)
and (bore < 19 or bore is null) and (displacement <= 65000 or displacement is null)


#53
With a precision of two decimal places, determine the average number of guns for the battleship classes.

select cast (avg(numguns * 1.0) as numeric(6,2)) from classes
where type = 'bb'


#54
With a precision of two decimal places, determine the average number of guns
for all battleships (including the ones in the Outcomes table).

select cast(avg(numguns * 1.0) as numeric(6, 2)) from
    (select name, type, numguns from ships s
    join classes c
    on c.class = s.class
    union
    select ship, type, numguns from outcomes
    left join classes
    on class = ship
    ) as a
where type = 'bb'


#55
For each class, determine the year the first ship of this class was launched.
If the lead ship’s year of launch is not known, get the minimum year of launch for the ships of this class.
Result set: class, year.

select distinct c.class, min(s.launched) from classes c
left join ships s
on c.class = s.class
group by c.class


#56
For each class, find out the number of ships of this class that were sunk in battles.
Result set: class, number of ships sunk.

select c.class, count(a.ship) from classes c
left join (
    select name as ship, class from outcomes
    join ships
    on name = ship
    where result = 'sunk'
    union
    select ship, class from outcomes
    join classes
    on class = ship
    where result = 'sunk') as a
on c.class = a.class
group by c.class


#57
For classes having irreparable combat losses and at least three ships in the database,
display the name of the class and the number of ships sunk.

select sunken_ships.class, count(sunken_ships.class) from (
    select class, o.ship from outcomes o
    join classes c
    on c.class = o.ship
    where result = 'sunk'
    union
    select class, ship from ships
    join outcomes
    on ship = name
    where result = 'sunk') as sunken_ships
where sunken_ships.class in (
    select T.class from (
        select s.class, name as names from ships s
        join classes c
        on c.class = s.class
        union
        select class, ship as names from outcomes
        join classes
        on class = ship ) as T
    group by T.class
    having count(names) >= 3)
group by class


#70
Get the battles in which at least three ships from the same country took part.

select distinct battle from (
    select battle, country, name as names from ships s
    join classes c
    on c.class = s.class
    join outcomes o
    on ship = name
    union
    select battle, country, ship as names from outcomes o
    join classes c
    on ship = class
    ) as M
group by battle, country
having count(names) >= 3


#73
For each country, determine the battles in which the ships of this country did not participate.
Result set: country, battle.

select country, name from classes, battles
except
    select country, name from (
    select country, battle as name
    from outcomes o
    join ships s
    on ship = s.name
    join classes c
    on s.class = c.class
    union
    select country, battle
    from outcomes
    join classes
    on class = ship
    ) as T


#74
Get all ship classes of Russia. If there are no Russian ship classes in the database,
display classes of all countries present in the DB.
Result set: country, class.

select country, class from classes
where country =
    case
    when exists
    (select country from classes
    where country = 'Russia')
    then 'Russia'
    else country
    end
