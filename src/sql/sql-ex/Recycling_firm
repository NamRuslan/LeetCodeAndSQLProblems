The firm owns several buy-back centers for collection of recyclable materials.
Each of them receives funds to be paid to the recyclables suppliers.
Data on funds received is recorded in the table
Income_o(point, date, inc)
The primary key is (point, date), where point holds the identifier of the buy-back center,
and date corresponds to the calendar date the funds were received.
The date column doesn’t include the time part, thus, money (inc) arrives no more than once a day for each center.
Information on payments to the recyclables suppliers is held in the table
Outcome_o(point, date, out)
In this table, the primary key (point, date) ensures each buy-back center reports about payments (out)
no more than once a day, too.
For the case income and expenditure may occur more than once a day,
another database schema with tables having a primary key consisting of the single column code is used:
Income(code, point, date, inc)
Outcome(code, point, date, out)
Here, the date column doesn’t include the time part, either.



#29
Under the assumption that receipts of money (inc) and payouts (out)
are registered not more than once a day for each collection point
[i.e. the primary key consists of (point, date)],
write a query displaying cash flow data (point, date, income, expense).
Use Income_o and Outcome_o tables.

select i.point, i.date, i.inc, o.out from income_o i
left join outcome_o o
on i.point = o.point and i.date = o.date
union
select o.point, o.date, i.inc, o.out from outcome_o o
left join income_o i
on i.point = o.point and i.date = o.date


#30
Under the assumption that receipts of money (inc) and payouts (out) can be registered
any number of times a day for each collection point [i.e. the code column is the primary key],
display a table with one corresponding row for each operating date of each collection point.
Result set: point, date, total payout per day (out), total money intake per day (inc).
Missing values are considered to be NULL.

select point, date, sum(out_sum), sum(inc_sum) from
    (select point, date, null as out_sum, sum(inc) as inc_sum
    from income
    group by point, date
    union
    select point, date, sum(out) as out_sum, null as inc_sum
    from outcome
    group by point, date) as all_come
group by point, date


#59
Calculate the cash balance of each buy-back center for the database
with money transactions being recorded not more than once a day.
Result set: point, balance.

select A.point, (coalesce(i, 0) - coalesce(o, 0)) from (
    select sum(inc) as i, point from income_o
    group by point
    ) as A
full join (
    select sum(out) as o, point from outcome_o
    group by point
    ) as B
on A.point = B.point


#60
For the database with money transactions being recorded not more than once a day,
calculate the cash balance of each buy-back center at the beginning of 4/15/2001.
Note: exclude centers not having any records before the specified date.
Result set: point, balance

select A.point,
case
when o is null
then i
else i - o
end
remain from (
    select sum(inc) as i, point from income_o
    where date < '2001/04/15'
    group by point) as A
left join (
    select sum(out) as o, point from outcome_o
    where date < '2001/04/15'
    group by point
    ) as B
on A.point = B.point


#62
For the database with money transactions being recorded not more than once a day,
calculate the total cash balance of all buy-back centers at the beginning of 04/15/2001.

select (
select sum(inc) from income_o
where date < '2001-04-15'
)
-
(select sum(out) from outcome_o
where date < '2001-04-15'
) as Remain


#64
Using the Income and Outcome tables, determine for each buy-back center
the days when it received funds but made no payments, and vice versa.
Result set: point, date, type of operation (inc/out), sum of money per day.

select i.point, i.date, 'inc' as operation, sum(inc) from income i
left join outcome o
on i.point = o.point and i.date = o.date
where o.date is null
group by i.point, i.date
union
select o.point, o.date, 'out' as operation, sum(out) from income i
right join outcome o
on i.point = o.point and i.date = o.date
where i.date is null
group by o.point, o.date


